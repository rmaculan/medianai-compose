events {
    worker_connections 1024;
}

http {
    error_log /dev/stderr debug; # Temporarily set debug logging to stderr
    upstream django {
        server django-web:8000;
    }

    upstream daphne {
        server daphne-web:8001; # Daphne service
    }

    server {
        listen 80;
        server_name medianai.io www.medianai.io; # Use actual domain names
        return 301 https://$host$request_uri; # Redirect HTTP to HTTPS
    }

    server {
        listen 443 ssl;
        server_name medianai.io www.medianai.io; # Use actual domain names

        ssl_certificate /etc/letsencrypt/archive/medianai.io/fullchain1.pem;
        ssl_certificate_key /etc/letsencrypt/archive/medianai.io/privkey1.pem;

        location / {
            proxy_pass http://django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /ws/ { # Location for WebSocket connections
            proxy_pass http://daphne; # Daphne is still HTTP internally
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /static/ {
            alias /app/static/;
            try_files $uri $uri/ =404;
        }

        location /media/ {
            alias /app/media/;
        }
        client_max_body_size 20M; # Increased to handle larger file uploads
    }
}
